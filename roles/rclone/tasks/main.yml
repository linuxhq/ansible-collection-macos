---
- name: Ensure rclone facts are generated
  tags:
    - rclone
  ansible.builtin.set_fact:
    __rclone_release: "rclone-{{ rclone_version }}-osx-{{ rclone_arch }}"
    __rclone_url: "https://downloads.rclone.org/{{ rclone_version }}"

- name: Ensure rclone temporary directory is present
  tags:
    - rclone
  ansible.builtin.tempfile:
    prefix: rclone.
    state: directory
    suffix: .zip
  register: __rclone_tempfile

- name: Ensure rclone package is gathered and unpacked
  tags:
    - rclone
  ansible.builtin.unarchive:
    dest: "{{ __rclone_tempfile.path }}"
    remote_src: true
    src: "{{ __rclone_url }}/{{ __rclone_release }}.zip"

- name: Ensure rclone binary path is present
  tags:
    - rclone
  ansible.builtin.file:
    mode: '0755'
    path: "{{ rclone_path_bin | dirname }}"
    state: directory

- name: Ensure rclone binary file is present
  tags:
    - rclone
  ansible.builtin.copy:
    dest: "{{ rclone_path_bin }}"
    mode: '0755'
    remote_src: true
    src: "{{ __rclone_tempfile.path }}/{{ __rclone_release }}/rclone"

- name: Ensure rclone temporary directory is absent
  tags:
    - rclone
  ansible.builtin.file:
    path: "{{ __rclone_tempfile.path }}"
    state: absent
  check_mode: false

- name: Ensure rclone configuration path is present
  tags:
    - rclone
  ansible.builtin.file:
    mode: '0755'
    path: "{{ rclone_path_conf | dirname }}"
    state: directory
  when:
    - rclone_conf | length > 0

- name: Ensure rclone configuration file is present
  tags:
    - rclone
  ansible.builtin.template:
    dest: "{{ rclone_path_conf }}"
    mode: '0600'
    src: rclone.conf.j2
  when:
    - rclone_conf | length > 0

- name: Ensure rclone property list path is present
  tags:
    - rclone
  ansible.builtin.file:
    mode: '0755'
    path: "{{ rclone_path_plist }}"
  when:
    - rclone_mounts | length > 0

- name: Ensure rclone property list mountpoint is present
  tags:
    - rclone
  ansible.builtin.file:
    mode: '0755'
    path: "{{ _mount.mountpoint }}"
    state: directory
  loop: "{{ rclone_mounts }}"
  loop_control:
    label: "{{ _mount.mountpoint | d(none) }}"
    loop_var: _mount
  when:
    - _mount.mountpoint is defined

- name: Ensure rclone property list file is present
  tags:
    - rclone
  ansible.builtin.template:
    dest: "{{ rclone_path_plist }}/{{ _mount.name }}.plist"
    mode: '0644'
    src: rclone.plist.j2
  loop: "{{ rclone_mounts }}"
  loop_control:
    label: "{{ _mount.name | d(none) }}"
    loop_var: _mount
  when:
    - _mount.name is defined
    - _mount.remote is defined
    - _mount.mountpoint is defined

- name: Ensure rclone property list agent is launched
  tags:
    - rclone
  ansible.builtin.command:
    cmd: >
      /bin/launchctl load -w
        {{ rclone_path_plist }}/{{ _mount.name }}.plist
  loop: "{{ rclone_mounts }}"
  loop_control:
    label: "{{ _mount.name | d(none) }}"
    loop_var: _mount
  when:
    - _mount.name is defined
    - _mount.remote is defined
    - _mount.mountpoint is defined
  changed_when: true
...
